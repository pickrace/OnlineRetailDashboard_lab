width = 9
)
)
)
# Server
server <- function(input, output) {
filtered <- reactive({
data <- df
if (input$country != "–£—Å—ñ") {
data <- data[data$Country == input$country, ]
}
data <- data[data$InvoiceDate >= input$date_range[1] & data$InvoiceDate <= input$date_range[2], ]
data
})
output$totalOrders <- renderText({
format(n_distinct(filtered()$InvoiceNo), big.mark = " ")
})
output$totalCustomers <- renderText({
format(n_distinct(filtered()$CustomerID), big.mark = " ")
})
output$totalRevenue <- renderText({
format(round(sum(filtered()$TotalPrice), 2), big.mark = " ")
})
output$countryPlot <- renderPlot({
data <- filtered() %>%
group_by(Country) %>%
summarise(Revenue = sum(TotalPrice)) %>%
arrange(desc(Revenue)) %>%
top_n(10, Revenue)
ggplot(data, aes(x = reorder(Country, Revenue), y = Revenue)) +
geom_bar(stat = "identity", fill = accent_color) +
coord_flip() +
labs(x = "–ö—Ä–∞—ó–Ω–∞", y = "–í–∏—Ä—É—á–∫–∞ (‚Ç¨)", title = "–¢–æ–ø-10 –∫—Ä–∞—ó–Ω –∑–∞ –≤–∏—Ä—É—á–∫–æ—é") +
theme_minimal()
})
output$datePlot <- renderPlot({
data <- filtered() %>%
group_by(InvoiceDate) %>%
summarise(Revenue = sum(TotalPrice))
ggplot(data, aes(x = InvoiceDate, y = Revenue)) +
geom_line(color = main_color, size = 1) +
labs(x = "–î–∞—Ç–∞", y = "–í–∏—Ä—É—á–∫–∞", title = "–ü—Ä–æ–¥–∞–∂—ñ –∑–∞ –¥–∞—Ç–∞–º–∏") +
theme_minimal()
})
output$productTable <- renderDT({
filtered() %>%
group_by(Description) %>%
summarise(
–ö—ñ–ª—å–∫—ñ—Å—Ç—å = sum(Quantity),
–í–∏—Ä—É—á–∫–∞ = round(sum(TotalPrice), 2)
) %>%
arrange(desc(–í–∏—Ä—É—á–∫–∞)) %>%
datatable(options = list(pageLength = 10), rownames = FALSE)
})
}
# –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
shinyApp(ui = ui, server = server)
runApp('C:/Users/Admin/OneDrive/Desktop/–ß–ù–£/–ú–∞–≥—ñ—Å—Ç—Ä –ï–∫–æ–Ω–æ–º/2 —Å–µ–º–µ—Å—Ç—Ä/R studio/dashboard')
setwd("C:/Users/Admin/OneDrive/Desktop/–ß–ù–£/–ú–∞–≥—ñ—Å—Ç—Ä –ï–∫–æ–Ω–æ–º/2 —Å–µ–º–µ—Å—Ç—Ä/R studio/dashboard")
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(DT)
# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö
df <- read_excel("Online Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
main_color <- "#2C3E50"
accent_color <- "#18BC9C"
# UI
ui <- fluidPage(
tags$head(
tags$style(HTML("
body { font-family: 'Helvetica Neue', sans-serif; background-color: #f9f9f9; }
h2, h4 { color: #2C3E50; }
.shiny-output-error { color: red; }
"))
),
titlePanel("üì¶ Online Retail Dashboard", windowTitle = "Online Retail Dashboard"),
sidebarLayout(
sidebarPanel(
selectInput("country", "–ö—Ä–∞—ó–Ω–∞", choices = c("–£—Å—ñ", sort(unique(df$Country))), selected = "–£—Å—ñ"),
dateRangeInput("date_range", "–î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:",
start = min(df$InvoiceDate), end = max(df$InvoiceDate)),
width = 3
),
mainPanel(
fluidRow(
column(4, wellPanel(h4("üßæ –ó–∞–º–æ–≤–ª–µ–Ω—å"), textOutput("totalOrders"))),
column(4, wellPanel(h4("üë• –ö–ª—ñ—î–Ω—Ç—ñ–≤"), textOutput("totalCustomers"))),
column(4, wellPanel(h4("üí∞ –í–∏—Ä—É—á–∫–∞ (‚Ç¨)"), textOutput("totalRevenue")))
),
tabsetPanel(
tabPanel("üåç –í–∏—Ä—É—á–∫–∞ –ø–æ –∫—Ä–∞—ó–Ω–∞—Ö", plotOutput("countryPlot", height = 400)),
tabPanel("üìà –ü—Ä–æ–¥–∞–∂—ñ –ø–æ –¥–∞—Ç–∞—Ö", plotOutput("datePlot", height = 400)),
tabPanel("üõí –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤", DTOutput("productTable"))
),
width = 9
)
)
)
# Server
server <- function(input, output) {
filtered <- reactive({
data <- df
if (input$country != "–£—Å—ñ") {
data <- data[data$Country == input$country, ]
}
data <- data[data$InvoiceDate >= input$date_range[1] & data$InvoiceDate <= input$date_range[2], ]
data
})
output$totalOrders <- renderText({
format(n_distinct(filtered()$InvoiceNo), big.mark = " ")
})
output$totalCustomers <- renderText({
format(n_distinct(filtered()$CustomerID), big.mark = " ")
})
output$totalRevenue <- renderText({
format(round(sum(filtered()$TotalPrice), 2), big.mark = " ")
})
output$countryPlot <- renderPlot({
data <- filtered() %>%
group_by(Country) %>%
summarise(Revenue = sum(TotalPrice)) %>%
arrange(desc(Revenue)) %>%
top_n(10, Revenue)
ggplot(data, aes(x = reorder(Country, Revenue), y = Revenue)) +
geom_bar(stat = "identity", fill = accent_color) +
coord_flip() +
labs(x = "–ö—Ä–∞—ó–Ω–∞", y = "–í–∏—Ä—É—á–∫–∞ (‚Ç¨)", title = "–¢–æ–ø-10 –∫—Ä–∞—ó–Ω –∑–∞ –≤–∏—Ä—É—á–∫–æ—é") +
theme_minimal()
})
output$datePlot <- renderPlot({
data <- filtered() %>%
group_by(InvoiceDate) %>%
summarise(Revenue = sum(TotalPrice))
ggplot(data, aes(x = InvoiceDate, y = Revenue)) +
geom_line(color = main_color, size = 1) +
labs(x = "–î–∞—Ç–∞", y = "–í–∏—Ä—É—á–∫–∞", title = "–ü—Ä–æ–¥–∞–∂—ñ –∑–∞ –¥–∞—Ç–∞–º–∏") +
theme_minimal()
})
output$productTable <- renderDT({
filtered() %>%
group_by(Description) %>%
summarise(
–ö—ñ–ª—å–∫—ñ—Å—Ç—å = sum(Quantity),
–í–∏—Ä—É—á–∫–∞ = round(sum(TotalPrice), 2)
) %>%
arrange(desc(–í–∏—Ä—É—á–∫–∞)) %>%
datatable(options = list(pageLength = 10), rownames = FALSE)
})
}
# –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
shinyApp(ui = ui, server = server)
getwd()
list.files()
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(DT)
# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö
df <- read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
main_color <- "#2C3E50"
accent_color <- "#18BC9C"
# UI
ui <- fluidPage(
tags$head(
tags$style(HTML("
body { font-family: 'Helvetica Neue', sans-serif; background-color: #f9f9f9; }
h2, h4 { color: #2C3E50; }
.shiny-output-error { color: red; }
"))
),
titlePanel("üì¶ Online Retail Dashboard", windowTitle = "Online Retail Dashboard"),
sidebarLayout(
sidebarPanel(
selectInput("country", "–ö—Ä–∞—ó–Ω–∞", choices = c("–£—Å—ñ", sort(unique(df$Country))), selected = "–£—Å—ñ"),
dateRangeInput("date_range", "–î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:",
start = min(df$InvoiceDate), end = max(df$InvoiceDate)),
width = 3
),
mainPanel(
fluidRow(
column(4, wellPanel(h4("üßæ –ó–∞–º–æ–≤–ª–µ–Ω—å"), textOutput("totalOrders"))),
column(4, wellPanel(h4("üë• –ö–ª—ñ—î–Ω—Ç—ñ–≤"), textOutput("totalCustomers"))),
column(4, wellPanel(h4("üí∞ –í–∏—Ä—É—á–∫–∞ (‚Ç¨)"), textOutput("totalRevenue")))
),
tabsetPanel(
tabPanel("üåç –í–∏—Ä—É—á–∫–∞ –ø–æ –∫—Ä–∞—ó–Ω–∞—Ö", plotOutput("countryPlot", height = 400)),
tabPanel("üìà –ü—Ä–æ–¥–∞–∂—ñ –ø–æ –¥–∞—Ç–∞—Ö", plotOutput("datePlot", height = 400)),
tabPanel("üõí –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤", DTOutput("productTable"))
),
width = 9
)
)
)
# Server
server <- function(input, output) {
filtered <- reactive({
data <- df
if (input$country != "–£—Å—ñ") {
data <- data[data$Country == input$country, ]
}
data <- data[data$InvoiceDate >= input$date_range[1] & data$InvoiceDate <= input$date_range[2], ]
data
})
output$totalOrders <- renderText({
format(n_distinct(filtered()$InvoiceNo), big.mark = " ")
})
output$totalCustomers <- renderText({
format(n_distinct(filtered()$CustomerID), big.mark = " ")
})
output$totalRevenue <- renderText({
format(round(sum(filtered()$TotalPrice), 2), big.mark = " ")
})
output$countryPlot <- renderPlot({
data <- filtered() %>%
group_by(Country) %>%
summarise(Revenue = sum(TotalPrice)) %>%
arrange(desc(Revenue)) %>%
top_n(10, Revenue)
ggplot(data, aes(x = reorder(Country, Revenue), y = Revenue)) +
geom_bar(stat = "identity", fill = accent_color) +
coord_flip() +
labs(x = "–ö—Ä–∞—ó–Ω–∞", y = "–í–∏—Ä—É—á–∫–∞ (‚Ç¨)", title = "–¢–æ–ø-10 –∫—Ä–∞—ó–Ω –∑–∞ –≤–∏—Ä—É—á–∫–æ—é") +
theme_minimal()
})
output$datePlot <- renderPlot({
data <- filtered() %>%
group_by(InvoiceDate) %>%
summarise(Revenue = sum(TotalPrice))
ggplot(data, aes(x = InvoiceDate, y = Revenue)) +
geom_line(color = main_color, size = 1) +
labs(x = "–î–∞—Ç–∞", y = "–í–∏—Ä—É—á–∫–∞", title = "–ü—Ä–æ–¥–∞–∂—ñ –∑–∞ –¥–∞—Ç–∞–º–∏") +
theme_minimal()
})
output$productTable <- renderDT({
filtered() %>%
group_by(Description) %>%
summarise(
–ö—ñ–ª—å–∫—ñ—Å—Ç—å = sum(Quantity),
–í–∏—Ä—É—á–∫–∞ = round(sum(TotalPrice), 2)
) %>%
arrange(desc(–í–∏—Ä—É—á–∫–∞)) %>%
datatable(options = list(pageLength = 10), rownames = FALSE)
})
}
# –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
shinyApp(ui = ui, server = server)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(DT)
# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö
df <- read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
main_color <- "#2C3E50"
accent_color <- "#18BC9C"
# UI
ui <- fluidPage(
tags$head(
tags$style(HTML("
body { font-family: 'Helvetica Neue', sans-serif; background-color: #f9f9f9; }
h2, h4 { color: #2C3E50; }
.shiny-output-error { color: red; }
"))
),
titlePanel("üì¶ Online Retail Dashboard", windowTitle = "Online Retail Dashboard"),
sidebarLayout(
sidebarPanel(
selectInput("country", "–ö—Ä–∞—ó–Ω–∞", choices = c("–£—Å—ñ", sort(unique(df$Country))), selected = "–£—Å—ñ"),
dateRangeInput("date_range", "–î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:",
start = min(df$InvoiceDate), end = max(df$InvoiceDate)),
width = 3
),
mainPanel(
fluidRow(
column(4, wellPanel(h4("üßæ –ó–∞–º–æ–≤–ª–µ–Ω—å"), textOutput("totalOrders"))),
column(4, wellPanel(h4("üë• –ö–ª—ñ—î–Ω—Ç—ñ–≤"), textOutput("totalCustomers"))),
column(4, wellPanel(h4("üí∞ –í–∏—Ä—É—á–∫–∞ (‚Ç¨)"), textOutput("totalRevenue")))
),
tabsetPanel(
tabPanel("üåç –í–∏—Ä—É—á–∫–∞ –ø–æ –∫—Ä–∞—ó–Ω–∞—Ö", plotOutput("countryPlot", height = 400)),
tabPanel("üìà –ü—Ä–æ–¥–∞–∂—ñ –ø–æ –¥–∞—Ç–∞—Ö", plotOutput("datePlot", height = 400)),
tabPanel("üõí –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤", DTOutput("productTable"))
),
width = 9
)
)
)
# Server
server <- function(input, output) {
filtered <- reactive({
data <- df
if (input$country != "–£—Å—ñ") {
data <- data[data$Country == input$country, ]
}
data <- data[data$InvoiceDate >= input$date_range[1] & data$InvoiceDate <= input$date_range[2], ]
data
})
output$totalOrders <- renderText({
format(n_distinct(filtered()$InvoiceNo), big.mark = " ")
})
output$totalCustomers <- renderText({
format(n_distinct(filtered()$CustomerID), big.mark = " ")
})
output$totalRevenue <- renderText({
format(round(sum(filtered()$TotalPrice), 2), big.mark = " ")
})
output$countryPlot <- renderPlot({
data <- filtered() %>%
group_by(Country) %>%
summarise(Revenue = sum(TotalPrice)) %>%
arrange(desc(Revenue)) %>%
top_n(10, Revenue)
ggplot(data, aes(x = reorder(Country, Revenue), y = Revenue)) +
geom_bar(stat = "identity", fill = accent_color) +
coord_flip() +
labs(x = "–ö—Ä–∞—ó–Ω–∞", y = "–í–∏—Ä—É—á–∫–∞ (‚Ç¨)", title = "–¢–æ–ø-10 –∫—Ä–∞—ó–Ω –∑–∞ –≤–∏—Ä—É—á–∫–æ—é") +
theme_minimal()
})
output$datePlot <- renderPlot({
data <- filtered() %>%
group_by(InvoiceDate) %>%
summarise(Revenue = sum(TotalPrice))
ggplot(data, aes(x = InvoiceDate, y = Revenue)) +
geom_line(color = main_color, size = 1) +
labs(x = "–î–∞—Ç–∞", y = "–í–∏—Ä—É—á–∫–∞", title = "–ü—Ä–æ–¥–∞–∂—ñ –∑–∞ –¥–∞—Ç–∞–º–∏") +
theme_minimal()
})
output$productTable <- renderDT({
filtered() %>%
group_by(Description) %>%
summarise(
–ö—ñ–ª—å–∫—ñ—Å—Ç—å = sum(Quantity),
–í–∏—Ä—É—á–∫–∞ = round(sum(TotalPrice), 2)
) %>%
arrange(desc(–í–∏—Ä—É—á–∫–∞)) %>%
datatable(options = list(pageLength = 10), rownames = FALSE)
})
}
# –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
shinyApp(ui = ui, server = server)
install.packages(c("knitr", "rmarkdown"))
install.packages(c("knitr", "rmarkdown"), type = "binary")
rsconnect::showLogs(appName = "FirstDashboard", account = "pickrace", streaming = TRUE)
runApp()
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(DT)
# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö
df <- read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
main_color <- "#2C3E50"
accent_color <- "#18BC9C"
# UI
ui <- fluidPage(
tags$head(
tags$style(HTML("
body { font-family: 'Helvetica Neue', sans-serif; background-color: #f9f9f9; }
h2, h4 { color: #2C3E50; }
.shiny-output-error { color: red; }
"))
),
titlePanel("üì¶ Online Retail Dashboard", windowTitle = "Online Retail Dashboard"),
sidebarLayout(
sidebarPanel(
selectInput("country", "–ö—Ä–∞—ó–Ω–∞", choices = c("–£—Å—ñ", sort(unique(df$Country))), selected = "–£—Å—ñ"),
dateRangeInput("date_range", "–î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:",
start = min(df$InvoiceDate), end = max(df$InvoiceDate)),
width = 3
),
mainPanel(
fluidRow(
column(4, wellPanel(h4("üßæ –ó–∞–º–æ–≤–ª–µ–Ω—å"), textOutput("totalOrders"))),
column(4, wellPanel(h4("üë• –ö–ª—ñ—î–Ω—Ç—ñ–≤"), textOutput("totalCustomers"))),
column(4, wellPanel(h4("üí∞ –í–∏—Ä—É—á–∫–∞ (‚Ç¨)"), textOutput("totalRevenue")))
),
tabsetPanel(
tabPanel("üåç –í–∏—Ä—É—á–∫–∞ –ø–æ –∫—Ä–∞—ó–Ω–∞—Ö", plotOutput("countryPlot", height = 400)),
tabPanel("üìà –ü—Ä–æ–¥–∞–∂—ñ –ø–æ –¥–∞—Ç–∞—Ö", plotOutput("datePlot", height = 400)),
tabPanel("üõí –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤", DTOutput("productTable"))
),
width = 9
)
)
)
# Server
server <- function(input, output) {
filtered <- reactive({
data <- df
if (input$country != "–£—Å—ñ") {
data <- data[data$Country == input$country, ]
}
data <- data[data$InvoiceDate >= input$date_range[1] & data$InvoiceDate <= input$date_range[2], ]
data
})
output$totalOrders <- renderText({
format(n_distinct(filtered()$InvoiceNo), big.mark = " ")
})
output$totalCustomers <- renderText({
format(n_distinct(filtered()$CustomerID), big.mark = " ")
})
output$totalRevenue <- renderText({
format(round(sum(filtered()$TotalPrice), 2), big.mark = " ")
})
output$countryPlot <- renderPlot({
data <- filtered() %>%
group_by(Country) %>%
summarise(Revenue = sum(TotalPrice)) %>%
arrange(desc(Revenue)) %>%
top_n(10, Revenue)
ggplot(data, aes(x = reorder(Country, Revenue), y = Revenue)) +
geom_bar(stat = "identity", fill = accent_color) +
coord_flip() +
labs(x = "–ö—Ä–∞—ó–Ω–∞", y = "–í–∏—Ä—É—á–∫–∞ (‚Ç¨)", title = "–¢–æ–ø-10 –∫—Ä–∞—ó–Ω –∑–∞ –≤–∏—Ä—É—á–∫–æ—é") +
theme_minimal()
})
output$datePlot <- renderPlot({
data <- filtered() %>%
group_by(InvoiceDate) %>%
summarise(Revenue = sum(TotalPrice))
ggplot(data, aes(x = InvoiceDate, y = Revenue)) +
geom_line(color = main_color, size = 1) +
labs(x = "–î–∞—Ç–∞", y = "–í–∏—Ä—É—á–∫–∞", title = "–ü—Ä–æ–¥–∞–∂—ñ –∑–∞ –¥–∞—Ç–∞–º–∏") +
theme_minimal()
})
output$productTable <- renderDT({
filtered() %>%
group_by(Description) %>%
summarise(
–ö—ñ–ª—å–∫—ñ—Å—Ç—å = sum(Quantity),
–í–∏—Ä—É—á–∫–∞ = round(sum(TotalPrice), 2)
) %>%
arrange(desc(–í–∏—Ä—É—á–∫–∞)) %>%
datatable(options = list(pageLength = 10), rownames = FALSE)
})
}
# –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
shinyApp(ui = ui, server = server)
# üì¶ –û–Ω–æ–≤–ª–µ–Ω–∏–π –¥–∞—à–±–æ—Ä–¥ –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–æ–º —Ç–∞ –∫—Ä–∞—Å–æ—é
# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö
# –ß–∏—Ç–∞–Ω–Ω—è Excel-—Ñ–∞–π–ª—É, –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –±–µ–∑ CustomerID, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–ª–æ–Ω–∫–∏ TotalPrice
df <- readxl::read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫
library(shiny)           # –î–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É
library(dplyr)           # –î–ª—è –º–∞–Ω—ñ–ø—É–ª—è—Ü—ñ–π –∑ –¥–∞–Ω–∏–º–∏
library(ggplot2)         # –î–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
library(DT)              # –î–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∞–±–ª–∏—Ü—å
library(plotly)          # –î–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö ggplot-–≥—Ä–∞—Ñ—ñ–∫—ñ–≤
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
# üì¶ –û–Ω–æ–≤–ª–µ–Ω–∏–π –¥–∞—à–±–æ—Ä–¥ –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–æ–º —Ç–∞ –∫—Ä–∞—Å–æ—é
# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö
# –ß–∏—Ç–∞–Ω–Ω—è Excel-—Ñ–∞–π–ª—É, –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –±–µ–∑ CustomerID, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–ª–æ–Ω–∫–∏ TotalPrice
df <- readxl::read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# üì¶ –û–Ω–æ–≤–ª–µ–Ω–∏–π –¥–∞—à–±–æ—Ä–¥ –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–æ–º —Ç–∞ –∫—Ä–∞—Å–æ—é
# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö
# –ß–∏—Ç–∞–Ω–Ω—è Excel-—Ñ–∞–π–ª—É, –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –±–µ–∑ CustomerID, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–ª–æ–Ω–∫–∏ TotalPrice
df <- read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
# üì¶ –û–Ω–æ–≤–ª–µ–Ω–∏–π –¥–∞—à–±–æ—Ä–¥ –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–æ–º —Ç–∞ –∫—Ä–∞—Å–æ—é
# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö
# –ß–∏—Ç–∞–Ω–Ω—è Excel-—Ñ–∞–π–ª—É, –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –±–µ–∑ CustomerID, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–ª–æ–Ω–∫–∏ TotalPrice
df <- read_excel("Online_Retail.xlsx", sheet = "Online Retail") %>%
filter(!is.na(CustomerID)) %>%
mutate(
InvoiceDate = as.Date(InvoiceDate),
TotalPrice = Quantity * UnitPrice
)
library(dplyr)
